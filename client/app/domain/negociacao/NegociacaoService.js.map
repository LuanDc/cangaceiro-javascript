{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","ApplicationException","NegociacaoService","constructor","_http","obtemNegociacoesDaSemana","get","then","dados","map","objeto","Date","data","quantidade","valor","err","obtemNegociacoesDaSemanaAnterior","obtemNegociacoesDaSemanaRetrasada","obtemNegociacoesDoPeriodo","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,uB,sBAAAA,W;;AACAC,sB,iBAAAA,U;;AACAC,gC,+BAAAA,oB;;;AACF,kBAAMC,iBAAN,CAAwB;;AAE3BC,8BAAc;;AAEV,yBAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACH;;AAEDM,2CAA2B;;AAEvB,2BAAO,KAAKD,KAAL,CAAWE,GAAX,CAAe,oBAAf,EACFC,IADE,CAECC,SAASA,MAAMC,GAAN,CAAUC,UAAU,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAFV,EAICC,OAAO;;AAEH,8BAAM,IAAId,oBAAJ,CAAyB,uCAAzB,CAAN;AACH,qBAPF,CAAP;AASH;;AAEDe,mDAAmC;;AAE/B,2BAAO,KAAKZ,KAAL,CAAWE,GAAX,CAAe,sBAAf,EACFC,IADE,CAECC,SAASA,MAAMC,GAAN,CAAUC,UAAU,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAFV,EAICC,OAAO;;AAEH,8BAAM,IAAId,oBAAJ,CAAyB,0DAAzB,CAAN;AACH,qBAPF,CAAP;AASH;;AAEDgB,oDAAoC;;AAEhC,2BAAO,KAAKb,KAAL,CAAWE,GAAX,CAAe,uBAAf,EACFC,IADE,CAECC,SAASA,MAAMC,GAAN,CAAUC,UAAU,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAFV,EAICC,OAAO;;AAEH,8BAAM,IAAId,oBAAJ,CAAyB,0DAAzB,CAAN;AACH,qBAPF,CAAP;AASH;;AAEKiB,yCAAN,GAAkC;AAAA;;AAAA;;AAE9B,4BAAI;;AAGA,gCAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC5B,MAAKhB,wBAAL,EAD4B,EAE5B,MAAKW,gCAAL,EAF4B,EAG5B,MAAKC,iCAAL,EAH4B,CAAZ,CAApB;;AAMA,mCAAOE,QACFG,MADE,CACK,UAACC,SAAD,EAAYC,IAAZ;AAAA,uCAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAArB;AAAA,6BADL,EACkD,EADlD,EAEFE,IAFE,CAEG,UAACC,CAAD,EAAIC,CAAJ;AAAA,uCAAUA,EAAEhB,IAAF,CAAOiB,OAAP,KAAmBF,EAAEf,IAAF,CAAOiB,OAAP,EAA7B;AAAA,6BAFH,CAAP;AAGH,yBAZD,CAaA,OAAMd,GAAN,EAAW;;AAEPe,oCAAQC,GAAR,CAAYhB,GAAZ;;AAEA,kCAAM,IAAId,oBAAJ,CAAyB,kDAAzB,CAAN;AACH;AApB6B;AAqBjC;AAnE0B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\nimport { Negociacao } from './Negociacao.js';\nimport { ApplicationException } from '../../util/ApplicationException.js';\nexport class NegociacaoService {\n\n    constructor() {\n\n        this._http = new HttpService();\n    }\n\n    obtemNegociacoesDaSemana() {\n\n        return this._http.get('negociacoes/semana')\n            .then(\n                dados => dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n                ,\n                err => {\n\n                    throw new ApplicationException('Não foi possível obter as negociações');\n                }\n            );\n    }\n\n    obtemNegociacoesDaSemanaAnterior() {\n\n        return this._http.get('negociacoes/anterior')\n            .then(\n                dados => dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n                ,\n                err => {\n\n                    throw new ApplicationException('Não foi possível obter as negociações da semana anterior');\n                }\n            );\n    }\n\n    obtemNegociacoesDaSemanaRetrasada() {\n\n        return this._http.get('negociacoes/retrasada')\n            .then(\n                dados => dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n                ,\n                err => {\n\n                    throw new ApplicationException('Não foi possível obter as negociações da semana anterior');\n                }\n            );\n    }\n\n    async obtemNegociacoesDoPeriodo() {\n\n        try {\n\n\n            let periodo = await Promise.all([\n                this.obtemNegociacoesDaSemana(),\n                this.obtemNegociacoesDaSemanaAnterior(),\n                this.obtemNegociacoesDaSemanaRetrasada()\n            ]);\n\n            return periodo\n                .reduce((novoArray, item) => novoArray.concat(item), [])\n                .sort((a, b) => b.data.getTime() - a.data.getTime());\n        }\n        catch(err) {\n\n            console.log(err);\n\n            throw new ApplicationException('Não foi possível obter as negociações do período');\n        }\n    }\n}   "]}